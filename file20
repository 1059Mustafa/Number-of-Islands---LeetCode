class Solution {
public:
    
    void dfs(vector<vector<char>>& grid,int x,int y,int r,int c)
    {
        if(x<0||y<0||x>=r||y>=c||grid[x][y]!='1')
        {
            return;
        }
        grid[x][y]='2';
        
        dfs(grid,x-1,y,r,c);
        dfs(grid,x,y+1,r,c);
        dfs(grid,x+1,y,r,c);
        dfs(grid,x,y-1,r,c);
        // dfs(grid,x-1,y-1,r,c);
        // dfs(grid,x-1,y+1,r,c);
        // dfs(grid,x+1,y-1,r,c);
        // dfs(grid,x+1,y+1,r,c);
        
    }
    
    int numIslands(vector<vector<char>>& grid) 
    {
        int row=grid.size();
        int col=grid[0].size();
        int count=0;
        if(row==0)
        {
            return 0;
        }
        for(int i=0;i<row;i++)
        {
            for(int j=0;j<col;j++)
            {
                if(grid[i][j]=='1')
                {
                    dfs(grid ,i ,j,row,col);
                    count++;
                }
            }
        }
        return count;
        
    }
};
